# Generated by Django 2.2.13 on 2020-07-06 19:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0011_update_proxy_permissions"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        verbose_name="email address",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[("objects", django.contrib.auth.models.UserManager()),],
        ),
        migrations.CreateModel(
            name="Campaign",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("slug", models.SlugField(null=True, unique=True)),
                ("name", models.CharField(max_length=128)),
                (
                    "description",
                    models.CharField(blank=True, max_length=700, null=True),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("AL", "Alabama"),
                            ("AZ", "Arizona"),
                            ("AR", "Arkansas"),
                            ("CA", "California"),
                            ("CO", "Colorado"),
                            ("CT", "Connecticut"),
                            ("DE", "Delaware"),
                            ("DC", "District of Columbia"),
                            ("FL", "Florida"),
                            ("GA", "Georgia"),
                            ("ID", "Idaho"),
                            ("IL", "Illinois"),
                            ("IN", "Indiana"),
                            ("IA", "Iowa"),
                            ("KS", "Kansas"),
                            ("KY", "Kentucky"),
                            ("LA", "Louisiana"),
                            ("ME", "Maine"),
                            ("MD", "Maryland"),
                            ("MA", "Massachusetts"),
                            ("MI", "Michigan"),
                            ("MN", "Minnesota"),
                            ("MS", "Mississippi"),
                            ("MO", "Missouri"),
                            ("MT", "Montana"),
                            ("NE", "Nebraska"),
                            ("NV", "Nevada"),
                            ("NH", "New Hampshire"),
                            ("NJ", "New Jersey"),
                            ("NM", "New Mexico"),
                            ("NY", "New York"),
                            ("NC", "North Carolina"),
                            ("ND", "North Dakota"),
                            ("OH", "Ohio"),
                            ("OK", "Oklahoma"),
                            ("OR", "Oregon"),
                            ("PA", "Pennsylvania"),
                            ("RI", "Rhode Island"),
                            ("SC", "South Carolina"),
                            ("SD", "South Dakota"),
                            ("TN", "Tennessee"),
                            ("TX", "Texas"),
                            ("UT", "Utah"),
                            ("VT", "Vermont"),
                            ("VA", "Virginia"),
                            ("WA", "Washington"),
                            ("WV", "West Virginia"),
                            ("WI", "Wisconsin"),
                            ("WY", "Wyoming"),
                            ("AK", "Alaska"),
                            ("HI", "Hawaii"),
                        ],
                        default=None,
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={"ordering": ("description",),},
        ),
        migrations.CreateModel(
            name="Membership",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_joined", models.DateField(auto_now_add=True)),
                ("is_org_admin", models.BooleanField(default=False)),
                ("is_org_moderator", models.BooleanField(default=False)),
                ("is_whitelisted", models.BooleanField(default=False)),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("description", models.CharField(blank=True, max_length=500)),
                ("ext_link", models.URLField(blank=True)),
                (
                    "states",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            blank=True,
                            choices=[
                                ("AL", "Alabama"),
                                ("AZ", "Arizona"),
                                ("AR", "Arkansas"),
                                ("CA", "California"),
                                ("CO", "Colorado"),
                                ("CT", "Connecticut"),
                                ("DE", "Delaware"),
                                ("DC", "District of Columbia"),
                                ("FL", "Florida"),
                                ("GA", "Georgia"),
                                ("ID", "Idaho"),
                                ("IL", "Illinois"),
                                ("IN", "Indiana"),
                                ("IA", "Iowa"),
                                ("KS", "Kansas"),
                                ("KY", "Kentucky"),
                                ("LA", "Louisiana"),
                                ("ME", "Maine"),
                                ("MD", "Maryland"),
                                ("MA", "Massachusetts"),
                                ("MI", "Michigan"),
                                ("MN", "Minnesota"),
                                ("MS", "Mississippi"),
                                ("MO", "Missouri"),
                                ("MT", "Montana"),
                                ("NE", "Nebraska"),
                                ("NV", "Nevada"),
                                ("NH", "New Hampshire"),
                                ("NJ", "New Jersey"),
                                ("NM", "New Mexico"),
                                ("NY", "New York"),
                                ("NC", "North Carolina"),
                                ("ND", "North Dakota"),
                                ("OH", "Ohio"),
                                ("OK", "Oklahoma"),
                                ("OR", "Oregon"),
                                ("PA", "Pennsylvania"),
                                ("RI", "Rhode Island"),
                                ("SC", "South Carolina"),
                                ("SD", "South Dakota"),
                                ("TN", "Tennessee"),
                                ("TX", "Texas"),
                                ("UT", "Utah"),
                                ("VT", "Vermont"),
                                ("VA", "Virginia"),
                                ("WA", "Washington"),
                                ("WV", "West Virginia"),
                                ("WI", "Wisconsin"),
                                ("WY", "Wyoming"),
                                ("AK", "Alaska"),
                                ("HI", "Hawaii"),
                            ],
                            max_length=50,
                        ),
                        size=None,
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                (
                    "members",
                    models.ManyToManyField(
                        through="main.Membership", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={"ordering": ("description",),},
        ),
        migrations.CreateModel(
            name="WhiteListEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.CharField(max_length=128)),
                ("date_added", models.DateField(auto_now_add=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.Organization",
                    ),
                ),
            ],
            options={"ordering": ("email",),},
        ),
        migrations.AddField(
            model_name="membership",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="main.Organization",
            ),
        ),
        migrations.CreateModel(
            name="CommunityEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "entry_ID",
                    models.CharField(
                        default=uuid.uuid4, max_length=100, unique=True
                    ),
                ),
                (
                    "user_polygon",
                    django.contrib.gis.db.models.fields.PolygonField(
                        geography=True, srid=4326
                    ),
                ),
                (
                    "census_blocks_polygon_array",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.gis.db.models.fields.PolygonField(
                            blank=True, geography=True, null=True, srid=4326
                        ),
                        blank=True,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "census_blocks_polygon",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        blank=True, geography=True, null=True, srid=4326
                    ),
                ),
                ("entry_name", models.CharField(default="", max_length=100)),
                (
                    "entry_reason",
                    models.TextField(blank=True, default="", max_length=500),
                ),
                ("user_name", models.CharField(default="", max_length=500)),
                (
                    "cultural_interests",
                    models.TextField(blank=True, default="", max_length=500),
                ),
                (
                    "economic_interests",
                    models.TextField(blank=True, default="", max_length=500),
                ),
                (
                    "comm_activities",
                    models.TextField(blank=True, default="", max_length=500),
                ),
                (
                    "other_considerations",
                    models.TextField(blank=True, default="", max_length=500),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("admin_approved", models.BooleanField(default=False)),
                (
                    "campaign",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.Campaign",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.Organization",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"db_table": "community_entry",},
        ),
        migrations.CreateModel(
            name="CampaignToken",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=100)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.Campaign",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="campaign",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="main.Organization",
            ),
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("street", models.CharField(default="", max_length=500)),
                ("city", models.CharField(default="", max_length=100)),
                ("state", models.CharField(default="", max_length=100)),
                ("zipcode", models.CharField(default="", max_length=12)),
                (
                    "entry",
                    models.ForeignKey(
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.CommunityEntry",
                    ),
                ),
            ],
            options={"ordering": ("entry",),},
        ),
    ]
